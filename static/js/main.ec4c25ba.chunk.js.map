{"version":3,"sources":["Styled-Components/Flex.ts","Styled-Components/MenuStyles.ts","Styled-Components/AlertStyle.ts","Components/Alert.tsx","Styled-Components/InputStyles.ts","Components/Input.tsx","Styled-Components/ItemsStyle.ts","Styled-Components/ItemStyle.tsx","Components/Item.tsx","Components/Items.tsx","Styled-Components/TitleStyle.ts","Components/Title.tsx","Components/Menu.tsx","Styled-Components/GlobalStyle.ts","App.tsx","index.tsx"],"names":["Flex","styled","div","dir","gap","MenuStyle","main","AlertStyle","action","Alert","act","setAction","show","useEffect","timeout","setTimeout","clearTimeout","InputStyles","uuidv4","require","v4","Input","addItem","inputField","useRef","document","createElement","useState","item","setItem","onSubmit","e","preventDefault","name","id","current","focus","handleSubmit","maxLength","type","value","ref","placeholder","onChange","target","autoFocus","ItemsStyle","ItemStyle","Item","removeItem","onClick","className","Items","items","map","TitleStyle","h1","Title","title","Menu","setItems","updateLocalStorage","localStorage","JSON","stringify","parse","getItem","newItems","filter","Global","createGlobalStyle","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec4c25ba.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\ninterface MyProps {\r\n  dir?: string;\r\n  gap?: string;\r\n}\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: ${({ dir }: MyProps) => dir};\r\n  gap: ${({ gap }: MyProps) => gap};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MenuStyle = styled.main`\r\n  width: 90%;\r\n  max-width: 800px;\r\n  border: 1px black solid;\r\n  margin-top: 2rem;\r\n  background: linear-gradient(-45deg, #010409, #010409, #2c3e50, #2c3e50);\r\n  background-size: 400% 400%;\r\n  border: none;\r\n  animation: anim 20s ease infinite;\r\n  border-radius: 5%;\r\n  min-height: 40rem;\r\n  box-shadow: 0 0 0.5rem gray;\r\n  transition: box-shadow 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    box-shadow: 0 0 0.8rem white;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @keyframes anim {\r\n    0% {\r\n      background-position: 0% 50%;\r\n    }\r\n    50% {\r\n      background-position: 100% 50%;\r\n    }\r\n    100% {\r\n      background-position: 0% 50%;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport interface StyleProps {\r\n  action?: string;\r\n}\r\n\r\nexport const AlertStyle = styled.div`\r\n  min-height: 30px;\r\n  height: 30px;\r\n  border-radius: 2rem;\r\n  color: ${({ action }: StyleProps) =>\r\n    action === \"add\" ? \"green\" : action === \"remove\" ? \"red\" : \"\"};\r\n  width: 50vw;\r\n  max-width: 70%;\r\n  min-width: 40vw;\r\n  margin: 1rem 0 0.5rem;\r\n  animation: fade 2.5s linear;\r\n  h5 {\r\n    font-style: italic;\r\n    text-align: center;\r\n    margin: auto;\r\n    line-height: 30px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  @keyframes fade {\r\n    0%,\r\n    100% {\r\n      opacity: 0;\r\n    }\r\n    80% {\r\n      opacity: 1;\r\n    }\r\n    20% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { AlertStyle } from \"../Styled-Components/AlertStyle\";\r\nimport { Flex } from \"../Styled-Components/Flex\";\r\n\r\nexport interface AlertProps {\r\n  act: Action;\r\n  setAction: (action: Action) => void;\r\n}\r\n\r\nexport interface Action {\r\n  action: string;\r\n  show: boolean;\r\n}\r\n\r\nconst alertTime = 2480;\r\n\r\nexport const Alert: React.FC<AlertProps> = ({ act, setAction }) => {\r\n  const { action, show } = act;\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAction({ action: \"\", show: false });\r\n    }, alertTime);\r\n    return () => clearTimeout(timeout);\r\n  }, [show, setAction]);\r\n\r\n  if (show) {\r\n    if (action === \"add\") {\r\n      return (\r\n        <Flex>\r\n          <AlertStyle action={action}>\r\n            <h5>Item added to the list!</h5>\r\n          </AlertStyle>\r\n        </Flex>\r\n      );\r\n    } else if (action === \"remove\") {\r\n      return (\r\n        <Flex>\r\n          <AlertStyle action={action}>\r\n            <h5>Item removed!</h5>\r\n          </AlertStyle>\r\n        </Flex>\r\n      );\r\n    }\r\n  }\r\n  return <AlertStyle></AlertStyle>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputStyles = styled.div`\r\n  input {\r\n    width: 50vw;\r\n    max-width: 70%;\r\n    border: none;\r\n    border-radius: 0.5rem 0 0 0.5rem;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    line-height: 40px;\r\n    padding: 6px 16px;\r\n    position: relative;\r\n    text-decoration: none;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    touch-action: manipulation;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n  }\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n  /* CSS */\r\n  button {\r\n    border-radius: 0 0.5rem 0.5rem 0;\r\n    appearance: none;\r\n    background-color: #2ea44f;\r\n    border: none;\r\n    box-shadow: rgba(27, 31, 35, 0.1) 0 1px 0;\r\n    box-sizing: border-box;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    font-family: -apple-system, system-ui, \"Segoe UI\", Helvetica, Arial,\r\n      sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    line-height: 40px;\r\n    padding: 6px 16px;\r\n    position: relative;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    touch-action: manipulation;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  button:focus:not(:focus-visible):not(.focus-visible) {\r\n    box-shadow: none;\r\n    outline: none;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: #2c974b;\r\n  }\r\n\r\n  button:focus {\r\n    box-shadow: rgba(46, 164, 79, 0.4) 0 0 0 3px;\r\n    outline: none;\r\n  }\r\n\r\n  button:disabled {\r\n    background-color: #94d3a2;\r\n    border-color: rgba(27, 31, 35, 0.1);\r\n    color: rgba(255, 255, 255, 0.8);\r\n    cursor: default;\r\n  }\r\n\r\n  button:active {\r\n    background-color: #298e46;\r\n    box-shadow: rgba(20, 70, 32, 0.2) 0 1px 0 inset;\r\n  }\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Flex } from \"../Styled-Components/Flex\";\r\nimport { InputStyles } from \"../Styled-Components/InputStyles\";\r\nimport { ItemType } from \"./Items\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\ninterface InputProps {\r\n  addItem: (item: ItemType) => void;\r\n}\r\n\r\nexport const Input: React.FC<InputProps> = ({ addItem }) => {\r\n  const inputField = useRef(document.createElement(\"input\"));\r\n  const [item, setItem] = useState(\"\");\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (item === \"\") return;\r\n    addItem({ name: item, id: uuidv4() });\r\n    setItem(\"\");\r\n    inputField.current.focus();\r\n  };\r\n\r\n  return (\r\n    <InputStyles>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Flex dir=\"row\">\r\n          <input\r\n            maxLength={30}\r\n            type=\"text\"\r\n            value={item}\r\n            ref={inputField}\r\n            placeholder=\"e.g. eggs\"\r\n            onChange={(e) => setItem(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </Flex>\r\n      </form>\r\n    </InputStyles>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StyleProps } from \"./AlertStyle\";\r\n\r\nexport const ItemsStyle = styled.div`\r\n  margin: 2rem 0;\r\n  div {\r\n    animation: ${({ action }: StyleProps) =>\r\n        action === \"add\" ? \"fadeOut\" : \"fadeIn\"}\r\n      1s;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  @keyframes fadeOut {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ItemStyle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 70%;\r\n  min-width: 10rem;\r\n  background-color: #2e3642;\r\n  border-radius: 2rem;\r\n  box-shadow: 0 0 0.5rem gray;\r\n  transition: box-shadow 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    box-shadow: 0 0 0.8rem white;\r\n  }\r\n  p {\r\n    min-width: 10rem;\r\n    width: 80%;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .svg {\r\n    color: red;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ItemStyle } from \"../Styled-Components/ItemStyle\";\r\nimport { ItemType } from \"./Items\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\n\r\ninterface ItemProps extends ItemType {\r\n  removeItem: (id: string) => void;\r\n}\r\n\r\nexport const Item: React.FC<ItemProps> = ({ id, name, removeItem }) => {\r\n  return (\r\n    <ItemStyle>\r\n      <p>{name}</p>\r\n      <button onClick={() => removeItem(id)}>\r\n        <BsFillTrashFill className=\"svg\" />\r\n      </button>\r\n    </ItemStyle>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Flex } from \"../Styled-Components/Flex\";\r\nimport { ItemsStyle } from \"../Styled-Components/ItemsStyle\";\r\nimport { Item } from \"./Item\";\r\n\r\ninterface ItemsProps {\r\n  items: ItemType[];\r\n  removeItem: (id: string) => void;\r\n  action: string;\r\n}\r\n\r\nexport interface ItemType {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport const Items: React.FC<ItemsProps> = ({ items, removeItem }) => {\r\n  return (\r\n    <ItemsStyle>\r\n      <Flex dir=\"column\" gap=\"1rem\">\r\n        {items.map((item) => {\r\n          return <Item key={item.id} {...item} removeItem={removeItem} />;\r\n        })}\r\n      </Flex>\r\n    </ItemsStyle>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleStyle = styled.h1`\r\n  margin: 1rem;\r\n`;\r\n","import React from \"react\";\r\nimport { Flex } from \"../Styled-Components/Flex\";\r\nimport { TitleStyle } from \"../Styled-Components/TitleStyle\";\r\n\r\ninterface TitleProps {\r\n  title: string;\r\n}\r\n\r\nexport const Title: React.FC<TitleProps> = ({ title }) => {\r\n  return (\r\n    <Flex>\r\n      <TitleStyle>{title}</TitleStyle>\r\n    </Flex>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Flex } from \"../Styled-Components/Flex\";\r\nimport { MenuStyle } from \"../Styled-Components/MenuStyles\";\r\nimport { Action, Alert } from \"./Alert\";\r\nimport { Input } from \"./Input\";\r\nimport { Items, ItemType } from \"./Items\";\r\nimport { Title } from \"./Title\";\r\n\r\ninterface MenuProps {}\r\n\r\nexport const Menu: React.FC<MenuProps> = () => {\r\n  const [action, setAction] = useState<Action>({ action: \"\", show: false });\r\n  const [items, setItems] = useState<ItemType[]>([]);\r\n  const getLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem(\"items\") || \"[]\");\r\n  };\r\n\r\n  const updateLocalStorage = (items: ItemType[]) => {\r\n    localStorage.setItem(\"items\", JSON.stringify(items));\r\n  };\r\n\r\n  const addItem = (item: ItemType) => {\r\n    setItems([...items, item]);\r\n    updateLocalStorage([...items, item]);\r\n    setAction({ action: \"add\", show: true });\r\n  };\r\n\r\n  const removeItem = (id: string) => {\r\n    setAction({ action: \"remove\", show: true });\r\n    const newItems = items.filter((item) => item.id !== id);\r\n    setItems(newItems);\r\n    updateLocalStorage(newItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setItems(getLocalStorage());\r\n  }, []);\r\n\r\n  return (\r\n    <Flex dir=\"column\">\r\n      <MenuStyle>\r\n        <Title title=\"Shopping list\" />\r\n        <Alert act={action} setAction={setAction} />\r\n        <Input addItem={addItem} />\r\n        <Items items={items} removeItem={removeItem} action={action.action} />\r\n      </MenuStyle>\r\n    </Flex>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const Global = createGlobalStyle`\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n  background-color: #010409;\r\n  color: #fff;\r\n}\r\n\r\nbody {\r\n    background: linear-gradient(-45deg, #010409,#010409,#2c3e50, #2c3e50);\r\n    background-size: 400% 400%;\r\n    animation: gradient 10s ease infinite;\r\n}\r\n\r\n\r\n@keyframes gradient {\r\n    0% {\r\n        background-position: 0% 50%;\r\n    }\r\n    50% {\r\n        background-position: 100% 50%;\r\n    }\r\n    100% {\r\n        background-position: 0% 50%;\r\n    }\r\n}\r\n`;\r\n","import React from \"react\";\nimport { Menu } from \"./Components/Menu\";\nimport { Global } from \"./Styled-Components/GlobalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <Global />\n      <Menu />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}